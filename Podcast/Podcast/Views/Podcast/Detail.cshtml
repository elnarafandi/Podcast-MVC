@model PodcastDetailVM



<main>
        <section id="podcast-episodes">
            <div class="my-container">
                <div class="all">
                    <div class="podcast">
                        <div class="img-title">
                            <div class="image"><img src="~/assets/images/podcasts/@Model.Podcast.Image" alt=""></div>
                            <div class="title">
                            <div class="text"><p>@Model.Podcast.Title</p></div>
                            <div><span style="color: #9B59B6 ; font-weight: bold;">Category:</span> <span>@Model.Podcast.PodcastCategory.Name</span></div>
                            <div class="podcaster"><a asp-controller="TeamMember" asp-action="Detail" asp-route-id="@Model.Podcast.TeamMember.Id"><img src="~/assets/images/home/@Model.Podcast.TeamMember.Image" alt=""></a><a asp-controller="TeamMember" asp-action="Detail" asp-route-id="@Model.Podcast.TeamMember.Id" style="text-decoration:none; color: #2D2D2D" class="mt-2"><p>@Model.Podcast.TeamMember.FirstName @Model.Podcast.TeamMember.LastName</p></a></div>
                              <div class="follow">
                                <form asp-controller="Podcast"
                                      asp-action="ToggleFollow"
                                      method="post">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="podcastId" value="@Model.Podcast.Id" />

                                    @if (Model.IsFollowing)
                                    {
                                        <button type="submit" class="btn btn-danger">Unfollow</button>
                                    }
                                    else
                                    {
                                        <button type="submit" class="btn btn-primary">Follow</button>
                                    }
                                </form>
                            </div>
                            </div>
                        </div>
                        <div class="description">
                        <p>@Model.Podcast.Description</p>
                        </div>
                    </div>
                    <div class="episodes">
                    @if (Model.Podcast.Episodes.Any())
                    {
                        @foreach (var episode in Model.Podcast.Episodes)
                        {
                            <div class="episode">
                                <div class="img-title">
                                    <div class="image"><a href=""><img src="~/assets/images/podcasts/@episode.Image" alt=""></a></div>
                                    <div class="number">
                                        <div class="title"><a href="">@episode.Title</a></div>
                                        <div class="num"><p>56000 listen</p></div>
                                    </div>
                                </div>
                                <div class="description"><p>@episode.Description</p></div>
                                <div class="guests">
                                    <div class="text"><p>Our guests:</p></div>
                                    <div class="g-info">
                                        @if (episode.EpisodeGuests.Any())
                                        {
                                            @foreach (var episodeGuest in episode.EpisodeGuests)
                                            {
                                                <div class="member">
                                                    <a asp-controller="Guest" asp-action="Detail" asp-route-id="@episodeGuest.Guest.Id"><img src="~/assets/images/home/@episodeGuest.Guest.Image" alt=""></a>
                                                    <a class="name" asp-controller="Guest" asp-action="Detail" asp-route-id="@episodeGuest.Guest.Id">@episodeGuest.Guest.FirstName @episodeGuest.Guest.LastName</a>
                                                </div>
                                            }
                                        }
                                    </div>
                                </div>
                                <div class="icons-play">
                                    <div class="icons">
                                        <div class="add-episode">
                                            <button type="button" class="btn btn-primary add" data-bs-toggle="modal" data-bs-target="#exampleModal-@episode.Id">
                                                <i class="bi bi-plus-circle"></i>
                                            </button>
                                            <!-- Modal -->
                                            <div class="modal fade" id="exampleModal-@episode.Id" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                                <div class="modal-dialog">
                                                    <div class="modal-content">
                                                        <div class="modal-header">
                                                            <h1 class="modal-title fs-5" id="exampleModalLabel">Your Playlists</h1>
                                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                        </div>
                                                        <div class="modal-body">
                                                            <form asp-action="AddEpisodeToPlaylist" method="post">
                                                                <input type="hidden" name="episodeId" value="@episode.Id" />
                                                                <input type="hidden" name="podcastId" value="@Model.Podcast.Id" />

                                                                <select name="playlistId" class="form-control">
                                                                    
                                                                    <option value="" disabled selected>Select Playlist</option>

                                                                    @foreach (var playlist in Model.Playlists)
                                                                    {
                                                                        <option value="@playlist.Id">@playlist.Name</option>
                                                                    }
                                                                </select>

                                                                <button type="submit" class="btn btn-primary mt-2">Add to Playlist</button>
                                                            </form>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="delete-episode">
                                            <form action="" method="">
                                                <button type="submit" class="btn btn-primary delete">
                                                    <i class="bi bi-dash-circle"></i>
                                                </button>
                                            </form>
                                        </div>

                                        <div class="like-episode">
                                            <form method="post" class="like-form" data-episode-id="@episode.Id">
                                                @Html.AntiForgeryToken()
                                                <button type="submit" class="btn btn-primary like like-btn">
                                                    <i class="bi @(Model.LikedEpisodeIds.Contains(episode.Id) ? "bi-hand-thumbs-up-fill" : "bi-hand-thumbs-up")"></i>
                                                </button>
                                            </form>
                                            <span class="like-count" data-episode-id="@episode.Id">@episode.Likes.Count()</span>
                                        </div>
                                    </div>
                                    <div class="play">
                                        <button onclick="playAudio('@episode.Audio', this)">
                                            <i class="bi bi-play-circle-fill"></i>
                                        </button>
                                        <audio id="audio-@episode.Id" controls>
                                            <source src="@Url.Content("~/audios/" + episode.Audio)" type="audio/mp3">
                                            Sizin brauzeriniz audio elementini dəstəkləmir.
                                        </audio>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
                </div>
            </div>
        </section>
        <section id="comments">
          <div class="my-container">
            <div class="area">
              <div class="write-comment">
                    <form asp-controller="Podcast" asp-action="AddComment" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" name="podcastId" value="@Model.Podcast.Id" />
                        <input type="text" name="content" placeholder="Share your opinion . . ." required>
                        <button type="submit"><i class="bi bi-send"></i></button>
                    </form>
              </div>
                <div class="all-comments">
                    @foreach (var comment in Model.Comments)
                    {
                        <div class="comment" style="position: relative; background-color: #fff; padding: 15px; margin-bottom: 10px; border-radius: 8px; box-shadow: 0 2px 5px rgba(0,0,0,0.1);">
                            
                            @if (comment.AppUserId == Model.UserId) 
                            {
                                <form method="post" action="@Url.Action("DeleteComment", "Podcast")" style="position: absolute; top: 10px; right: 10px; padding: 0; margin: 0;">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="commentId" value="@comment.Id" />
                                    <button type="submit" class="btn btn-danger btn-sm" style="background-color: transparent; border: none; font-size: 18px; color: #dc3545; cursor: pointer;">
                                        <i class="bi bi-x-circle" style="font-size: 20px;"></i>
                                    </button>
                                </form>
                            }

                            
                            <div class="profile" style="display: flex; align-items: center; gap: 10px;">
                                <img src="~/assets/images/home/@comment.AppUser.Image" alt="" style="width: 40px; height: 40px; border-radius: 50%; object-fit: cover;">
                                <p style="font-weight: bold; margin: 0;">@comment.AppUser.FirstName @comment.AppUser.LastName</p>
                            </div>
                            <div class="text" style="margin-top: 10px;">
                                <p style="font-size: 15px; color: #555;">@comment.Content</p>
                            </div>
                        </div>
                    }
                </div>
            </div>
          </div>
        </section>
</main>


@* <script>
    function playAudio(audioSrc, button) {
        const episodeDiv = button.closest('.episode'); // Ən yaxın .episode konteynerini tapır
        const audioElement = episodeDiv.querySelector('audio'); // Onun içindəki audio elementini tapır
        const isPlaying = !audioElement.paused;

        // Bütün digər audio-ları dayandır
        document.querySelectorAll('audio').forEach(audio => {
            if (audio !== audioElement) {
                audio.pause();
                audio.previousElementSibling.innerHTML = '<i class="bi bi-play-circle-fill"></i>';
            }
        });

        if (isPlaying) {
            audioElement.pause();
            button.innerHTML = '<i class="bi bi-play-circle-fill"></i>';
        } else {
            audioElement.play();
            button.innerHTML = '<i class="bi bi-pause-circle-fill"></i>';
        }
    }

</script> *@

<script>
    // 🔊 Play/Pause funksiyası
    function playAudio(audioSrc, button) {
        const episodeDiv = button.closest('.episode');
        const audioElement = episodeDiv.querySelector('audio');
        const isPlaying = !audioElement.paused;

        document.querySelectorAll('audio').forEach(audio => {
            if (audio !== audioElement) {
                audio.pause();
                audio.previousElementSibling.innerHTML = '<i class="bi bi-play-circle-fill"></i>';
            }
        });

        if (isPlaying) {
            audioElement.pause();
            button.innerHTML = '<i class="bi bi-play-circle-fill"></i>';
        } else {
            audioElement.play();
            button.innerHTML = '<i class="bi bi-pause-circle-fill"></i>';
        }
    }

    // 👍 Like funksiyası
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".like-form").forEach(form => {
            form.addEventListener("submit", async function (e) {
                e.preventDefault();

                const episodeId = form.dataset.episodeId;
                const button = form.querySelector(".like-btn");
                const icon = button.querySelector("i");
                const span = document.querySelector(`.like-count[data-episode-id='${episodeId}']`);

                const token = document.querySelector("input[name='__RequestVerificationToken']").value;

                const formData = new FormData();
                formData.append("episodeId", episodeId);

                const response = await fetch("/Podcast/ToggleEpisodeLike", {
                    method: "POST",
                    headers: {
                        "RequestVerificationToken": token
                    },
                    body: formData
                });

                if (response.ok) {
                    const result = await response.json();

                    if (result.isLiked) {
                        icon.classList.remove("bi-hand-thumbs-up");
                        icon.classList.add("bi-hand-thumbs-up-fill");
                    } else {
                        icon.classList.remove("bi-hand-thumbs-up-fill");
                        icon.classList.add("bi-hand-thumbs-up");
                    }

                    span.textContent = result.likeCount;
                }
            });
        });
    });
</script>
